             Log of Changes Made to CFITSIO

Version 1.23 - 24 April 1997

   - modified ffcins and ffdins (in editcol.c) to simply return 
     without error if there are no (zero) rows in the table.

Version 1.22 - 18 April 1997

   - fixed bug in ffgcpr that caused it to think that all values were
     undefined in ASCII tables columns that have TNULLn = '        '
     (i.e., the TNULLn keyword value is a string of blanks.

   - fixed bug in the ffgcl[bdeijk,ui,uj] family of routines
     when parsing a numeric value in an ASCII table.  The
     returned values would have the decimal place shifted to
     the left if the table field contained an explicit decimal
     point followed by blanks.  Example:  in an F5.2 column,
     the value '16.  ' would be returned as 0.16.  If the
     trailing zeros were present, then cfitsio returned the
     correct value (e.g.,  '16.00' returns 16.).

   - fixed another bug in the ffgcl[bdeijk,ui,uj] family of routines
     that caused them to misread values in an ASCII table in rows
     following an undefined value when all the values were read
     at once in a single call to the routine.

Version 1.21 - 26 March 1997

   - added general support for reading and writing unsigned integer
     keywords, images, and binary table column values.

   - fixed bug in the way the column number was used in ffgsve and
     similar routines.  This bug caused cfitsio to read (colnum - 1)
     rather than the desired column.

   - fixed a bug in ftgkls that prevented it from reading more than one
     continuation line of a long string keyword value.

   - fixed the definition of fits_write_longwarn in longnam.h

Version 1.20 - 29 Jan 1997

   - when creating a binary table with variable length vector columns, if the
     calling routine does not specify a value for the maximum length of
     the vector (e.g.,  TFORMn = '1PE(400)')  then cfitsio will automatically
     calculate the maximum value and append it to the TFORM value
     when the binary table is first closed.

   - added the set of routines to do coordinate system transformations

   - added support for wildcards ('*', '?', and '#') in the input
     keyword name when reading, modifying, or deleting keywords.

   - added new general keyword reading routine, ffgnxk, to return
     the next keyword whose name matches a list of template names,
     but does not match any names on a second template list.

   - modified ftgrec so that it simply moves to the beginning
     of the header if the input keyword number = 0

   - added check in ffdelt to make sure the input fits file pointer is
     not already null

   - added check in ffcopy to make sure the output HDU does not
     already contain any keywords (it must be empty).

   - modified ffgcls so that it does not test if each string column
     value equals the null string value if the null string value
     is longer than the width of the column.

   - fixed bug in ftgtdm that caused it to fail if the TDIMn 
     keyword did not exist in the FITS file

   - modified testprog.c to include tests of keyword wildcards
     and the WCS coordinate transformation routines.

   - added a test for 'EMX' in fitsio2.h so that cfitsio builds 
     correctly on a PC running OS/2.

Version 1.11 - 04 Dec 1996

   - modified the testprog.c program that is included with the
     distribution, so that the output FITS file is identical to
     that produced by the Fortran FITSIO test program.

   - changed all instances of the 'extname' variable to 'extnm'
     to avoid a conflict with the -Dextname switch in cfortran.h
     on HP machines.

   - in all the routines like ffi4fi1, which convert an array
     of values to integers just prior to writing them to the FITS
     file, the integer value is now rounded to the nearest integer
     rather than truncated. (ffi4fi1, ffi4fi2, ffi4fi4, etc)

   - changed ffgcfl (and hence ffgcl) so that the input value
     of the logical array element is not changed if the corresponding
     FITS value is undefined.

   - in ffgacl, the returned value of TBCOL was off by 1 (too small)

   - fixed the comment of EXTNAME keyword to read 'binary table'
     instead of 'ASCII table' in the header of binary tables.

Version 1.101 - 17 Nov 1996

   - Made major I/O efficiency improvements by adding internal buffers
     rather than directly reading or writing to disk.  Access to 
     columns in binary tables is now 50 - 150 times fasters.  Access to
     FITS image is also slightly faster.

   - made significant speed improvements when reading numerical data
     in FITS ASCII tables by writing my own number parsing routines
     rather than using the sscanf C library routine.  This change
     requires that the -lm argument now be included when linking
     a program that calls cfitsio (under UNIX).

   - regrouped the source files into logically related sets of routines.
     The Makefile now runs much faster since every single routine is
     not split into a separate file.

   - now use the memcpy function, rather than a 'for' loop in several
     places for added efficiency

   - redesigned the low-level binary table read and write routines
     (ffpbytoff and ffgbytoff) for greater efficiency.

   - added a new error status: 103 = too many open FITS files.

   - added a 'extern "C"' statement around the function prototypes
     in fitsio.h, to support use of cfitsio by C++ compilers.

   - fixed routines for writing or reading fixed-length substrings
     within a binary table ASCII column, with TFORM values of
     of the form 'rAw' where 'r' is the total width of the ASCII
     column and 'w' is the width of a substring within the column.

   - no longer automatically rewrite the END card and following fill
     values if they are already correct.

   - all the 'get keyword value and comment' routines have been changed 
     so that the comment is not returned if the input pointer is NULL.

   - added new routine to return the optimum number of tables rows
     that should be read or written at one time for optimum efficiency.

   - modified the way numerical values in ASCII tables are parsed so
     that embedded spaces in the value are ignored, and implicit
     decimal points are now supported.   (e.g, the string '123E 12'
     in a 'E10.2' format column will be interpreted as 1.23 * 10**12).

   - modified ffpcl and ffgcl to support binary table columns of
     all datatype (added logical, bit, complex, and double complex)

   - when writing numerical data to ASCII table columns, the ffpcl_
     routines now return an overflow error if a value is too large
     to be expressed in the column format.

   - closed small memory leak in ffpcls.

   - initialized the 'incre' variable in ffgcpr to eliminate compiler warning.

Version 1.04 - 17 Sept 1996

   - added README.MacOS and cfitsio_mac.sit.hqx to the distribution
     to support the Mac platforms.

   - fixed bug in ffpdfl that caused an EOF error (107) when a program
     creats a new extention that is an exact multiple of 2880 bytes long,
     AND the program does not write a value to the last element
     in the table or image.

   - fixed bug in all the ffgsf* and ffgcv* routines which caused
     core dumps when reading null values in a table.

Version 1.03 - 20 August 1996

   - added full support for reading and writing the C 'int'
     data type.  This was a problem on Alpha/OSF where short,
     int, and long datatypes are 2, 4, and 8 bytes long, respectively.

   - cleaned up the code in the byte-swapping routines.

   - renamed the file 'longname.h' to 'longnam.h' to avoid conflict
     with a file with the same name in another unrelated package.

Version 1.02 - 15 August 1996

   - ffgtbp was not correctly reading the THEAP keyword, hence would
     not correctly read variable length data in binary tables if
     the heap was not at the default starting location (i.e., 
     starting immediately after the fixed length table).

   - now force the cbuff variable in ffpcl_ and ffgcl_ to be
     aligned on a double word boundary.  Non-alignment can
     cause program to crash on some systems.

Version 1.01 - 12 August 1996

   - initial public release
